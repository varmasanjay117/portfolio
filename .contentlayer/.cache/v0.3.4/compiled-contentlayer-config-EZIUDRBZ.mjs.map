{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport remarkGfm from 'remark-gfm';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nconst About = defineDocumentType(() => ({\n  name: 'About',\n  filePathPattern: `about/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    summary: { type: 'string', required: true },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: doc => doc._raw.sourceFileName.replace(/\\.mdx/, ''),\n    },\n  },\n}));\n\nconst Projects = defineDocumentType(() => ({\n  name: 'Projects',\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    summary: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n    tag: {\n      type: 'list',\n      of: { type: 'string' },\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: doc => doc._raw.sourceFileName.replace(/\\.mdx/, ''),\n    },\n  },\n}));\n/** @type {import('rehype-pretty-code').Options} */\nconst rehypePrettyOptions = {\n  theme: {\n    light: 'github-light',\n    dark: 'github-dark',\n  },\n  keepBackground: true,\n};\n/** @type {import('contentlayer/source-files').SourcePlugin} */\n\nexport default makeSource({\n  contentDirPath: './src/content',\n  documentTypes: [About, Projects],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeAutolinkHeadings,\n      [\n        // @ts-expect-error\n        rehypePrettyCode,\n        rehypePrettyOptions,\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC5C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,SAAO,IAAI,KAAK,eAAe,QAAQ,SAAS,EAAE;AAAA,IAC7D;AAAA,EACF;AACF,EAAE;AAEF,IAAM,WAAW,mBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,KAAK;AAAA,MACH,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,SAAO,IAAI,KAAK,eAAe,QAAQ,SAAS,EAAE;AAAA,IAC7D;AAAA,EACF;AACF,EAAE;AAEF,IAAM,sBAAsB;AAAA,EAC1B,OAAO;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,gBAAgB;AAClB;AAGA,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO,QAAQ;AAAA,EAC/B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA;AAAA,QAEE;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
